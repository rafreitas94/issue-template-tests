name: Parse form issue to Json

on:
  issues:
    types: [opened, reopened]
    name: ['*BUG*']

jobs:
  run_if_label_matches:
    if: github.event.label.name == 'bug'
    runs-on: ubuntu-latest
    steps:
      - run: echo 'The label was bug'

  parse:
    runs-on: ubuntu-latest
    needs: [run_if_label_matches]
    outputs:
      output1: ${{ steps.set.outputs.json_var}}
      Contact_Details: ${{ steps.contact_details.outputs.contact }}
    steps:
      - name: Run Issue form parser
        id: parse
        uses: peter-murray/issue-forms-body-parser@v2.0.0
        with:
          issue_id: 18
          separator: '###'
          label_marker_start: '>>'
          label_marker_end: '<<'

      - name: set output
        id: set
        run: |
          echo ::set-output name=json_var::'[${{steps.parse.outputs.payload}}]'

      - name: set output
        id: contact_details
        run: |
          contact=echo $json_var | jq '.[].Contact_Details'
          echo "::set-output contact=$contact"

      - name: use output
        run: |
          echo $json_var | jq '.[].Contact_Details'
          echo $json_var | jq '.[].What_happened'
          echo $json_var | jq '.[].Version'
          echo $json_var | jq '.[].What_browsers_are_you_seeing_the_problem_on?'
          echo $json_var | jq '.[].Relevant_log_output'
        env:
          json_var: ${{ steps.set.outputs.json_var}}

  job2:
    runs-on: ubuntu-latest
    needs: parse
    steps:
    - run: |
        echo ${{needs.parse.outputs.Contact_Details}}


    # steps:
    #   - name: Run Issue form parser
    #     id: parse
    #     uses: peter-murray/issue-forms-body-parser@v2.0.0
    #     with:
    #       issue_id: 18
    #       separator: '###'
    #       label_marker_start: '>>'
    #       label_marker_end: '<<'

    #   - name: set output
    #     id: set
    #     run: |
    #       echo ::set-output name=json_var::'[${{steps.parse.outputs.payload}}]'

    #   - name: use output
    #     run: |
    #       echo $json_var | jq '.[].Version'
    #     env:
    #       json_var: ${{ steps.set.outputs.json_var}}

      # - name: Show parsed data JSON
      #   run: |
      #     echo "${{ steps.parse.outputs.payload }}"

  # auto-closing-issue:
  #   runs-on: ubuntu-latest
  #   needs: [parse]
  #   steps:
  #     - name: Close Issue
  #       uses: peter-evans/close-issue@v1
  #       with:
  #         issue-number: ${{ github.event.issue.number }}
  #         comment: Auto-closing issue